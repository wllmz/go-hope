version: "3.9"
services:
  traefik:
    image: "traefik:v3.3"
    container_name: "traefik"
    restart: always
    command:
      # API and dashboard configuration
      - "--api.dashboard=false"
      # Log configuration
      - "--log.level=INFO"
      # Docker provider configuration
      - "--providers.docker=true" # Changé à true pour permettre la découverte de conteneurs
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=web"
      # Entrypoints configuration
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      # Let's Encrypt configuration
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=contact.gohope@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.go-hope.fr`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$ruca84Hq$$dQIZkQR71ZMiqJMct6SyZ0"
      - "traefik.http.routers.traefik.middlewares=auth"
    mem_limit: 256M

  frontend-dev:
    build:
      context: ./Go-hope-app
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    restart: unless-stopped
    expose:
      - "80"
    env_file:
      - ./API/.env
    environment:
      - NODE_ENV=development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-dev.rule=Host(`dev-app.go-hope.fr`)"
      - "traefik.http.routers.frontend-dev.entrypoints=websecure"
      - "traefik.http.routers.frontend-dev.tls.certresolver=myresolver"
      - "traefik.http.services.frontend-dev.loadbalancer.server.port=80"
    networks:
      - web
    mem_limit: 256M

  backend-dev:
    build:
      context: ./API
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    restart: unless-stopped
    expose:
      - "5000"
    volumes:
      - /var/www/Go-hope/uploads:/app/uploads
    env_file:
      - ./API/.env
    environment:
      - NODE_ENV=development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-dev.rule=Host(`dev-api.go-hope.fr`)"
      - "traefik.http.routers.backend-dev.entrypoints=websecure"
      - "traefik.http.routers.backend-dev.tls.certresolver=myresolver"
      - "traefik.http.services.backend-dev.loadbalancer.server.port=5000"
    networks:
      - web
    mem_limit: 512M

  frontend-prod:
    build:
      context: ./Go-hope-app
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    restart: unless-stopped
    expose:
      - "80"
    env_file:
      - ./API/.env
    environment:
      - NODE_ENV=production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-prod.rule=Host(`app.go-hope.fr`)"
      - "traefik.http.routers.frontend-prod.entrypoints=websecure"
      - "traefik.http.routers.frontend-prod.tls.certresolver=myresolver"
      - "traefik.http.services.frontend-prod.loadbalancer.server.port=80"
    networks:
      - web
    mem_limit: 256M
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend-prod:
    build:
      context: ./API
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    restart: unless-stopped
    expose:
      - "5000"
    volumes:
      - /var/www/Go-hope/uploads:/app/uploads
    env_file:
      - ./API/.env
    environment:
      - NODE_ENV=production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-prod.rule=Host(`api.go-hope.fr`)"
      - "traefik.http.routers.backend-prod.entrypoints=websecure"
      - "traefik.http.routers.backend-prod.tls.certresolver=myresolver"
      - "traefik.http.services.backend-prod.loadbalancer.server.port=5000"
    networks:
      - web
    mem_limit: 512M
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  web:
    external: true

volumes:
  letsencrypt:
